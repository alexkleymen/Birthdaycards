{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Yaniv arad\\\\New Projects\\\\BirthDayCards\\\\client\\\\my-app\\\\src\\\\components\\\\context\\\\EventContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useEffect, useContext, useState, createContext } from 'react';\nimport { UserContext } from '../App';\nimport axios from 'axios';\nimport { PinDropSharp } from '@material-ui/icons';\nexport const EventContext = /*#__PURE__*/createContext();\n\nconst Events = () => {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  const [user] = useContext(UserContext);\n  useEffect(() => {\n    axios.get('http://localhost:5000/event/').then(resp => {\n      let allEvents = resp.data;\n      let userEvent = allEvents.filter(event => event.user == user.id);\n      setEvents(userEvent);\n    });\n  }, []);\n\n  const EventsContextProivder = props => {\n    let event = events.filter(event => event._id === id);\n    event = event[0];\n    let index = events.findIndex(event => event._id === id);\n    event.name = name;\n    let allEvents = [...events];\n    allEvents.splice(index, 1, event);\n    setEvents(allEvents);\n    axios.put(\"http://localhost:5000/event/\" + id, {\n      \"name\": name\n    }).then(res => {\n      console.log(res);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(EventContext.Provider, {\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Events, \"hskuqhj35nu1B1lNTQ3d7e9I1AA=\");\n\n_c = Events;\nexport default EventsContextProivder;\n\nvar _c;\n\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"sources":["C:/Yaniv arad/New Projects/BirthDayCards/client/my-app/src/components/context/EventContext.js"],"names":["React","Component","useEffect","useContext","useState","createContext","UserContext","axios","PinDropSharp","EventContext","Events","events","setEvents","user","get","then","resp","allEvents","data","userEvent","filter","event","id","EventsContextProivder","props","_id","index","findIndex","name","splice","put","res","console","log","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA0BC,SAA1B,EAAoCC,UAApC,EAA+CC,QAA/C,EAAwDC,aAAxD,QAA6E,OAA7E;AACA,SAAQC,WAAR,QAA0B,QAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,oBAA7B;AACA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC;;AAGP,MAAMK,MAAM,GAAG,MAAM;AAAA;;AAEjB,QAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBR,QAAQ,CAAC,EAAD,CAAnC;AACA,QAAM,CAACS,IAAD,IAASV,UAAU,CAACG,WAAD,CAAzB;AAEJJ,EAAAA,SAAS,CAAC,MAAI;AAEVK,IAAAA,KAAK,CAACO,GAAN,CAAU,8BAAV,EAA0CC,IAA1C,CAA+CC,IAAI,IAAE;AACjD,UAAIC,SAAS,GAAGD,IAAI,CAACE,IAArB;AACA,UAAIC,SAAS,GAAGF,SAAS,CAACG,MAAV,CAAiBC,KAAK,IAAEA,KAAK,CAACR,IAAN,IAAcA,IAAI,CAACS,EAA3C,CAAhB;AACAV,MAAAA,SAAS,CAACO,SAAD,CAAT;AACH,KAJD;AAMH,GARQ,EAQP,EARO,CAAT;;AAUA,QAAMI,qBAAqB,GAAIC,KAAD,IAAW;AACrC,QAAIH,KAAK,GAAGV,MAAM,CAACS,MAAP,CAAcC,KAAK,IAAEA,KAAK,CAACI,GAAN,KAAYH,EAAjC,CAAZ;AACAD,IAAAA,KAAK,GAAGA,KAAK,CAAC,CAAD,CAAb;AACA,QAAIK,KAAK,GAAGf,MAAM,CAACgB,SAAP,CAAiBN,KAAK,IAAEA,KAAK,CAACI,GAAN,KAAYH,EAApC,CAAZ;AACAD,IAAAA,KAAK,CAACO,IAAN,GAAaA,IAAb;AACA,QAAIX,SAAS,GAAG,CAAC,GAAGN,MAAJ,CAAhB;AACAM,IAAAA,SAAS,CAACY,MAAV,CAAiBH,KAAjB,EAAuB,CAAvB,EAAyBL,KAAzB;AACAT,IAAAA,SAAS,CAACK,SAAD,CAAT;AACAV,IAAAA,KAAK,CAACuB,GAAN,CAAU,iCAAiCR,EAA3C,EAA+C;AAC3C,cAASM;AADkC,KAA/C,EAEGb,IAFH,CAEQgB,GAAG,IAAE;AACTC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAJD;AAMH,GAdD;;AAiBI,sBACI,QAAC,YAAD,CAAc,QAAd;AAAA,cACKP,KAAK,CAACU;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAtCD;;GAAMxB,M;;KAAAA,M;AAwCN,eAAea,qBAAf","sourcesContent":["import React, { Component,useEffect,useContext,useState,createContext } from 'react';\r\nimport {UserContext} from '../App'\r\nimport axios from 'axios'\r\nimport { PinDropSharp } from '@material-ui/icons';\r\nexport const EventContext = createContext()\r\n\r\n\r\nconst Events = () => {\r\n\r\n    const [events,setEvents] = useState([])\r\n    const [user] = useContext(UserContext)\r\n\r\nuseEffect(()=>{\r\n    \r\n    axios.get('http://localhost:5000/event/').then(resp=>{\r\n        let allEvents = resp.data;\r\n        let userEvent = allEvents.filter(event=>event.user == user.id)\r\n        setEvents(userEvent)\r\n    })\r\n\r\n},[])\r\n\r\nconst EventsContextProivder = (props) => { \r\n    let event = events.filter(event=>event._id===id)\r\n    event = event[0]\r\n    let index = events.findIndex(event=>event._id===id)\r\n    event.name = name;\r\n    let allEvents = [...events]\r\n    allEvents.splice(index,1,event)\r\n    setEvents(allEvents)\r\n    axios.put(\"http://localhost:5000/event/\" + id ,{\r\n        \"name\" : name\r\n    }).then(res=>{\r\n        console.log(res)\r\n    })\r\n\r\n}\r\n\r\n\r\n    return  ( \r\n        <EventContext.Provider>\r\n            {props.children}\r\n        </EventContext.Provider>\r\n      \r\n     ) \r\n}\r\n \r\nexport default EventsContextProivder;"]},"metadata":{},"sourceType":"module"}